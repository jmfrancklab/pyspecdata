.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_fourier_pre_post.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_fourier_pre_post.py:


Frequency and Time Shifting
===========================

Here we show that relabeling an axis before or after a Fourier Transform
generates the expected result.


.. rst-class:: sphx-glr-script-out


.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\johnf\notebook\pyspecdata\examples\fourier_pre_post.py", line 53, in <module>
        data.ft_clear_startpoints('t',t = 0,f = 'current')
      File "c:\users\johnf\notebook\pyspecdata\pyspecdata\fourier\ft_shift.py", line 204, in ft_clear_startpoints
        raise ValueError(strm("You need to explicitly"
    ValueError: You need to explicitly set `nearest`, since you are trying to shift the start point from -1.129032258064516 to 0 which is a non-integral number  3.4965820312499996  of dt= 0.3228959732601772 intervals (n_dt  -3.4965820312499996 .  If you don't know why you're getting this error, see the documentation for ft_clear_startpoints!!






|


.. code-block:: default

    # from JF notebook sec:task4126
    from pylab import *
    from pyspecdata import *
    fl = figlist_var()
    t = r_[2.5:12:1024j]
    data = nddata(empty_like(t),[-1],['t']).setaxis('t',t)
    data.set_units('t','s') # set the units to s, which are automatically converted to Hz upon FT
    data = data.fromaxis('t',lambda x: where(logical_and(x > 3,x < 6),1,0))

    default_plot_kwargs = dict(alpha = 0.5, linewidth = 2)

    fl.next('time domain -- positive starting point')
    fl.plot(data,**default_plot_kwargs)
    fl.plot(data.runcopy(imag),**default_plot_kwargs)
    expand_y()

    fl.next('and shift $t_{start}\\rightarrow 0$')
    data.ft('t',shift = True)
    #control = data.copy()
    data.ft_clear_startpoints('t',t = 0,f = 'current')
    data.ift('t')
    fl.plot(data,**default_plot_kwargs)
    fl.plot(data.runcopy(imag),**default_plot_kwargs)
    expand_y()

    #fl.next('diagnose frequencies')
    #fl.plot(abs(control),label = 'control',**default_plot_kwargs)
    #data.ft('t')
    #fl.plot(abs(data),label = 'after ift',**default_plot_kwargs)
    t = r_[0:10:32j]
    dt = t[1] - t[0]
    t -= 3.5*dt # to ensure that no point passes through zero
    data = nddata(empty_like(t),[-1],['t']).setaxis('t',t)
    data.set_units('t','s') # set the units to s, which are automatically converted to Hz upon FT
    data = data.fromaxis('t',lambda x: where(logical_and(x > 3,x < 6),1,0))


    default_plot_kwargs.update(dict(marker = 'o'))

    fl.next('strange time axis with nothing passing through zero')
    fl.plot(data,label = 'R: original',**default_plot_kwargs)
    fl.plot(data.runcopy(imag),label = "I: original",**default_plot_kwargs)
    expand_y()

    data.ft('t',shift = True)
    data.ft_clear_startpoints('t',t = 0,f = 'current')
    data.ift('t',pad = 1024)
    default_plot_kwargs.update(dict(marker = None))
    fl.plot(data,label = "R: new",**default_plot_kwargs)
    fl.plot(data.runcopy(imag),label = "I: new",**default_plot_kwargs)
    expand_y()

    fl.show('ft_demo_weird_startpoints_151030.pdf')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.247 seconds)


.. _sphx_glr_download_auto_examples_fourier_pre_post.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: fourier_pre_post.py <fourier_pre_post.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: fourier_pre_post.ipynb <fourier_pre_post.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
